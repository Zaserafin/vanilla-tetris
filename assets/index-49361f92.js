(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))r(i);new MutationObserver(i=>{for(const n of i)if(n.type==="childList")for(const a of n.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&r(a)}).observe(document,{childList:!0,subtree:!0});function s(i){const n={};return i.integrity&&(n.integrity=i.integrity),i.referrerPolicy&&(n.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?n.credentials="include":i.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function r(i){if(i.ep)return;i.ep=!0;const n=s(i);fetch(i.href,n)}})();class m{constructor(e=60,s=60){this.isRunning=!1,this.gameTickRate=e,this.lastGameTick=0,this.lastRender=0,this.targetFPS=s,this.frameDuration=1e3/this.targetFPS,this.gameLoop=this.gameLoop.bind(this),this.renderLoop=this.renderLoop.bind(this)}start(){this.isRunning||(this.isRunning=!0,this.gameLoop(),this.renderLoop())}stop(){this.isRunning=!1}update(){}render(){}gameLoop(){if(this.isRunning){const e=performance.now();e-this.lastGameTick>=1e3/this.gameTickRate&&(this.update(),this.lastGameTick=e),requestAnimationFrame(this.gameLoop)}}renderLoop(){if(this.isRunning){const e=performance.now();e-this.lastRender>=this.frameDuration&&(this.render(),this.lastRender=e),requestAnimationFrame(this.renderLoop)}}}const t={playerScore:0,tetrisCount:0,highScore:0,gameOver:!1,scores:{single:100,double:200,triple:300,tetris:800,doubleTetris:1200},settings:{mainCanvasId:"game-canvas",pieceCanvasId:"piece-canvas",soundEnabled:!0,squareSize:30,backgroundColor:"#4f4f4f",lineColor:"#ffffff09",lineThickness:2,solidColor:"lightcoral",tickRate:4,frameRate:30,canvasHeight:600,canvasWidth:300},piecesTemplates:[{id:"i",x:4,y:0,color:"cyan",template:[[1,1,1,1]]},{id:"j",x:4,y:0,color:"blue",template:[[1,1,1],[0,0,1]]},{id:"l",x:4,y:0,color:"orange",template:[[1,1,1],[1,0,0]]},{id:"o",x:4,y:0,color:"yellow",template:[[1,1],[1,1]]},{id:"s",x:4,y:0,color:"lightgreen",template:[[0,1,1],[1,1,0]]},{id:"t",x:4,y:0,color:"violet",template:[[0,1,0],[1,1,1]]},{id:"z",x:4,y:0,color:"coral",template:[[1,1,0],[0,1,1]]}]};class f{constructor(e,s,r,i="white"){this.canvas=document.getElementById(e),this.canvas.width=s,this.canvas.height=r,this.context=this.canvas.getContext("2d"),this.setBackgroundColor(i)}setBackgroundColor(e){this.canvas.style.backgroundColor=e}clear(){this.context.clearRect(0,0,this.canvas.width,this.canvas.height)}restoreContextState(){this.context.restore()}saveContextState(){this.context.save()}drawRect(e,s,r,i,n){this.context.fillStyle=n,this.context.fillRect(e,s,r,i)}drawLine(e,s,r,i,n,a=1){this.context.strokeStyle=n,this.context.lineWidth=a,this.context.beginPath(),this.context.moveTo(e,s),this.context.lineTo(r,i),this.context.stroke()}drawCircle(e,s,r,i){this.context.fillStyle=i,this.context.beginPath(),this.context.arc(e,s,r,0,Math.PI*2),this.context.fill()}drawText(e,s,r,i,n){this.context.fillStyle=n,this.context.font=i,this.context.fillText(e,s,r)}drawImage(e,s,r,i,n){this.context.drawImage(e,s,r,i,n)}getCanvasInfo(){return{width:this.canvas.width,height:this.canvas.height,backgroundColor:this.canvas.style.backgroundColor}}resize({width:e=null,height:s=null}){e&&(this.canvas.width=e),s&&(this.canvas.height=s)}getContext(){return this.context}}function g(o){return o[Math.floor(Math.random()*o.length)]}function p(o,e){let s=[];for(let r=0;r<e;r++){const i=[];for(let n=0;n<o;n++)i.push(0);s.push(i)}return s}function h(o,e,s,r,i="down"){let n={x:Math.trunc(e.x),y:Math.trunc(e.y)};for(let a=0;a<e.template.length;a++)for(let l=0;l<e.template[a].length;l++){if(e.template[a][l]===0)continue;let c=l+n.x,u=a+n.y;if(i==="down"&&(u+1>=r||o[u+1][c]!==0)||i==="right"&&(c+1>=s||o[u][c+1]!==0)||i==="left"&&(c-1<0||o[u][c-1]!==0))return!1}return!0}function x(o){return{x:Math.trunc(o.x),y:Math.trunc(o.y)}}class y extends m{constructor(){super(t.settings.tickRate,t.settings.frameRate),this.gameRenderer=new f(t.settings.mainCanvasId,t.settings.canvasWidth,t.settings.canvasHeight,t.settings.backgroundColor,root),this.pieceRenderer=new f(t.settings.pieceCanvasId,0,0,"transparent",root),this.squareCountX=this.gameRenderer.getCanvasInfo().width/t.settings.squareSize,this.squareCountY=this.gameRenderer.getCanvasInfo().height/t.settings.squareSize,this.currentPiece=g(t.piecesTemplates),this.nextPiece=g(t.piecesTemplates),this.board=p(this.squareCountX,this.squareCountY+4),console.log(this.board),this.renderNextPiece(),t.highScore=window.localStorage.getItem("highscore")||0,this.updateScores()}handleRotationMovement(){h(this.board,this.currentPiece,this.squareCountX,this.squareCountY,"left")&&h(this.board,this.currentPiece,this.squareCountX,this.squareCountY,"right")&&(this.currentPiece.template=this.currentPiece.template[0].map((e,s)=>this.currentPiece.template.map(r=>r[s]).reverse()))}handleLeftMovement(){h(this.board,this.currentPiece,this.squareCountX,this.squareCountY,"left")&&this.currentPiece.x--}handleRightMovement(){h(this.board,this.currentPiece,this.squareCountX,this.squareCountY,"right")&&this.currentPiece.x++}checkGameOver(){return this.board[0].some(e=>e!==0)}clearCompleteRows(){let e=0;for(let s=0;s<this.board.length;s++)this.board[s].every(r=>r!==0)&&(e++,this.board.splice(s,1),this.board.unshift(Array(this.squareCountX).fill(0)));e>=4?(t.previousTetris=!0,t.playerScore+=t.previousTetris?t.scores.doubleTetris:t.scores.tetris,t.tetrisCount++):(t.previousTetris=!1,t.playerScore+=e*t.scores.single),this.updateScores()}updateScores(){document.getElementById("score").innerText=`Score: ${t.playerScore}`,document.getElementById("tetris").innerText=`Tetris: ${t.tetrisCount}`,document.getElementById("highscore").innerText=`Highscore: ${t.highScore}`}update(){if(!t.gameOver)if(h(this.board,this.currentPiece,this.squareCountX,this.squareCountY))this.currentPiece.y++;else{let e=x({x:this.currentPiece.x,y:this.currentPiece.y});for(let s=0;s<this.currentPiece.template.length;s++)for(let r=0;r<this.currentPiece.template[s].length;r++){if(this.currentPiece.template[s][r]===0)continue;let i=r+e.x,n=s+e.y;this.board[n][i]=1}this.currentPiece.y=0,this.currentPiece.x=Math.trunc(this.squareCountX/2),this.currentPiece=this.nextPiece,this.nextPiece=g(t.piecesTemplates),this.clearCompleteRows(),this.renderNextPiece(),this.checkGameOver()&&(t.gameOver=!0,t.highScore=t.playerScore,window.localStorage.setItem("highscore",t.playerScore))}}renderBackground(){for(let e=0;e<this.squareCountX;e++)this.gameRenderer.drawRect(t.settings.squareSize*e-t.settings.lineThickness,0,t.settings.lineThickness,this.gameRenderer.getCanvasInfo().height,t.settings.lineColor);for(let e=0;e<this.squareCountY;e++)this.gameRenderer.drawRect(0,t.settings.squareSize*e-t.settings.lineThickness,this.gameRenderer.getCanvasInfo().width,t.settings.lineThickness,t.settings.lineColor)}renderBoard(){for(let e=0;e<this.board.length;e++){const s=this.board[e];for(let r=0;r<s.length;r++)this.board[e][r]!==0&&this.gameRenderer.drawRect(r*t.settings.squareSize,e*t.settings.squareSize,t.settings.squareSize-t.settings.lineThickness,t.settings.squareSize-t.settings.lineThickness,t.settings.solidColor)}}renderCurrentPiece(){for(let e=0;e<this.currentPiece.template.length;e++)for(let s=0;s<this.currentPiece.template[e].length;s++)this.currentPiece.template[e][s]!==0&&this.gameRenderer.drawRect((this.currentPiece.x+s)*t.settings.squareSize,(this.currentPiece.y+e)*t.settings.squareSize,t.settings.squareSize-t.settings.lineThickness,t.settings.squareSize-t.settings.lineThickness,this.currentPiece.color)}renderNextPiece(){this.pieceRenderer.resize({width:this.nextPiece.template[0].length*t.settings.squareSize,height:t.settings.squareSize*2});for(let e=0;e<this.nextPiece.template.length;e++)for(let s=0;s<this.nextPiece.template[e].length;s++)this.nextPiece.template[e][s]!==0&&this.pieceRenderer.drawRect(s*t.settings.squareSize,e*t.settings.squareSize,t.settings.squareSize-t.settings.lineThickness,t.settings.squareSize-t.settings.lineThickness,this.nextPiece.color)}renderGameOver(){this.gameRenderer.setBackgroundColor("red")}render(){if(this.gameRenderer.clear(),t.gameOver){this.renderGameOver();return}this.renderBackground(),this.renderBoard(),this.renderCurrentPiece()}}const d=new y;window.addEventListener("keydown",o=>{o.key==="ArrowLeft"&&d.handleLeftMovement(),o.key==="ArrowRight"&&d.handleRightMovement(),o.key==="ArrowUp"&&d.handleRotationMovement()});d.start();
